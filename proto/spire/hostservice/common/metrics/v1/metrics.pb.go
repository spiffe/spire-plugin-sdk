// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: spire/hostservice/common/metrics/v1/metrics.proto

package metricsv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SetGaugeRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The gauge key.
	Key []string `protobuf:"bytes,1,rep,name=key,proto3" json:"key,omitempty"`
	// Required. The gauge value.
	Val float32 `protobuf:"fixed32,2,opt,name=val,proto3" json:"val,omitempty"`
	// Optional. One or more labels for the gauge.
	Labels        []*Label `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetGaugeRequest) Reset() {
	*x = SetGaugeRequest{}
	mi := &file_spire_hostservice_common_metrics_v1_metrics_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetGaugeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetGaugeRequest) ProtoMessage() {}

func (x *SetGaugeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spire_hostservice_common_metrics_v1_metrics_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetGaugeRequest.ProtoReflect.Descriptor instead.
func (*SetGaugeRequest) Descriptor() ([]byte, []int) {
	return file_spire_hostservice_common_metrics_v1_metrics_proto_rawDescGZIP(), []int{0}
}

func (x *SetGaugeRequest) GetKey() []string {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *SetGaugeRequest) GetVal() float32 {
	if x != nil {
		return x.Val
	}
	return 0
}

func (x *SetGaugeRequest) GetLabels() []*Label {
	if x != nil {
		return x.Labels
	}
	return nil
}

type EmitKeyRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The key key.
	Key []string `protobuf:"bytes,1,rep,name=key,proto3" json:"key,omitempty"`
	// Required. The key value.
	Val           float32 `protobuf:"fixed32,2,opt,name=val,proto3" json:"val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmitKeyRequest) Reset() {
	*x = EmitKeyRequest{}
	mi := &file_spire_hostservice_common_metrics_v1_metrics_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmitKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmitKeyRequest) ProtoMessage() {}

func (x *EmitKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spire_hostservice_common_metrics_v1_metrics_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmitKeyRequest.ProtoReflect.Descriptor instead.
func (*EmitKeyRequest) Descriptor() ([]byte, []int) {
	return file_spire_hostservice_common_metrics_v1_metrics_proto_rawDescGZIP(), []int{1}
}

func (x *EmitKeyRequest) GetKey() []string {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *EmitKeyRequest) GetVal() float32 {
	if x != nil {
		return x.Val
	}
	return 0
}

type IncrCounterRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The counter key.
	Key []string `protobuf:"bytes,1,rep,name=key,proto3" json:"key,omitempty"`
	// Required. The counter value.
	Val float32 `protobuf:"fixed32,2,opt,name=val,proto3" json:"val,omitempty"`
	// Optional. One or more labels for the counter.
	Labels        []*Label `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IncrCounterRequest) Reset() {
	*x = IncrCounterRequest{}
	mi := &file_spire_hostservice_common_metrics_v1_metrics_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IncrCounterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncrCounterRequest) ProtoMessage() {}

func (x *IncrCounterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spire_hostservice_common_metrics_v1_metrics_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncrCounterRequest.ProtoReflect.Descriptor instead.
func (*IncrCounterRequest) Descriptor() ([]byte, []int) {
	return file_spire_hostservice_common_metrics_v1_metrics_proto_rawDescGZIP(), []int{2}
}

func (x *IncrCounterRequest) GetKey() []string {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *IncrCounterRequest) GetVal() float32 {
	if x != nil {
		return x.Val
	}
	return 0
}

func (x *IncrCounterRequest) GetLabels() []*Label {
	if x != nil {
		return x.Labels
	}
	return nil
}

type AddSampleRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The sample key.
	Key []string `protobuf:"bytes,1,rep,name=key,proto3" json:"key,omitempty"`
	// Required. The sample value.
	Val float32 `protobuf:"fixed32,2,opt,name=val,proto3" json:"val,omitempty"`
	// Optional. One or more labels for the sample.
	Labels        []*Label `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddSampleRequest) Reset() {
	*x = AddSampleRequest{}
	mi := &file_spire_hostservice_common_metrics_v1_metrics_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddSampleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSampleRequest) ProtoMessage() {}

func (x *AddSampleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spire_hostservice_common_metrics_v1_metrics_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSampleRequest.ProtoReflect.Descriptor instead.
func (*AddSampleRequest) Descriptor() ([]byte, []int) {
	return file_spire_hostservice_common_metrics_v1_metrics_proto_rawDescGZIP(), []int{3}
}

func (x *AddSampleRequest) GetKey() []string {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *AddSampleRequest) GetVal() float32 {
	if x != nil {
		return x.Val
	}
	return 0
}

func (x *AddSampleRequest) GetLabels() []*Label {
	if x != nil {
		return x.Labels
	}
	return nil
}

type MeasureSinceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The sample key for the time measurement.
	Key []string `protobuf:"bytes,1,rep,name=key,proto3" json:"key,omitempty"`
	// Required. Unix time in nanoseconds.
	Time int64 `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
	// Optional. One or more labels for the sample.
	Labels        []*Label `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MeasureSinceRequest) Reset() {
	*x = MeasureSinceRequest{}
	mi := &file_spire_hostservice_common_metrics_v1_metrics_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MeasureSinceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasureSinceRequest) ProtoMessage() {}

func (x *MeasureSinceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spire_hostservice_common_metrics_v1_metrics_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasureSinceRequest.ProtoReflect.Descriptor instead.
func (*MeasureSinceRequest) Descriptor() ([]byte, []int) {
	return file_spire_hostservice_common_metrics_v1_metrics_proto_rawDescGZIP(), []int{4}
}

func (x *MeasureSinceRequest) GetKey() []string {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *MeasureSinceRequest) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *MeasureSinceRequest) GetLabels() []*Label {
	if x != nil {
		return x.Labels
	}
	return nil
}

type Label struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The name of the label.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Required. The value of the label.
	Value         string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Label) Reset() {
	*x = Label{}
	mi := &file_spire_hostservice_common_metrics_v1_metrics_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Label) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Label) ProtoMessage() {}

func (x *Label) ProtoReflect() protoreflect.Message {
	mi := &file_spire_hostservice_common_metrics_v1_metrics_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Label.ProtoReflect.Descriptor instead.
func (*Label) Descriptor() ([]byte, []int) {
	return file_spire_hostservice_common_metrics_v1_metrics_proto_rawDescGZIP(), []int{5}
}

func (x *Label) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Label) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

var File_spire_hostservice_common_metrics_v1_metrics_proto protoreflect.FileDescriptor

const file_spire_hostservice_common_metrics_v1_metrics_proto_rawDesc = "" +
	"\n" +
	"1spire/hostservice/common/metrics/v1/metrics.proto\x12#spire.hostservice.common.metrics.v1\x1a\x1bgoogle/protobuf/empty.proto\"y\n" +
	"\x0fSetGaugeRequest\x12\x10\n" +
	"\x03key\x18\x01 \x03(\tR\x03key\x12\x10\n" +
	"\x03val\x18\x02 \x01(\x02R\x03val\x12B\n" +
	"\x06labels\x18\x03 \x03(\v2*.spire.hostservice.common.metrics.v1.LabelR\x06labels\"4\n" +
	"\x0eEmitKeyRequest\x12\x10\n" +
	"\x03key\x18\x01 \x03(\tR\x03key\x12\x10\n" +
	"\x03val\x18\x02 \x01(\x02R\x03val\"|\n" +
	"\x12IncrCounterRequest\x12\x10\n" +
	"\x03key\x18\x01 \x03(\tR\x03key\x12\x10\n" +
	"\x03val\x18\x02 \x01(\x02R\x03val\x12B\n" +
	"\x06labels\x18\x03 \x03(\v2*.spire.hostservice.common.metrics.v1.LabelR\x06labels\"z\n" +
	"\x10AddSampleRequest\x12\x10\n" +
	"\x03key\x18\x01 \x03(\tR\x03key\x12\x10\n" +
	"\x03val\x18\x02 \x01(\x02R\x03val\x12B\n" +
	"\x06labels\x18\x03 \x03(\v2*.spire.hostservice.common.metrics.v1.LabelR\x06labels\"\x7f\n" +
	"\x13MeasureSinceRequest\x12\x10\n" +
	"\x03key\x18\x01 \x03(\tR\x03key\x12\x12\n" +
	"\x04time\x18\x02 \x01(\x03R\x04time\x12B\n" +
	"\x06labels\x18\x03 \x03(\v2*.spire.hostservice.common.metrics.v1.LabelR\x06labels\"1\n" +
	"\x05Label\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value2\xd9\x03\n" +
	"\aMetrics\x12X\n" +
	"\bSetGauge\x124.spire.hostservice.common.metrics.v1.SetGaugeRequest\x1a\x16.google.protobuf.Empty\x12V\n" +
	"\aEmitKey\x123.spire.hostservice.common.metrics.v1.EmitKeyRequest\x1a\x16.google.protobuf.Empty\x12^\n" +
	"\vIncrCounter\x127.spire.hostservice.common.metrics.v1.IncrCounterRequest\x1a\x16.google.protobuf.Empty\x12Z\n" +
	"\tAddSample\x125.spire.hostservice.common.metrics.v1.AddSampleRequest\x1a\x16.google.protobuf.Empty\x12`\n" +
	"\fMeasureSince\x128.spire.hostservice.common.metrics.v1.MeasureSinceRequest\x1a\x16.google.protobuf.EmptyBXZVgithub.com/spiffe/spire-plugin-sdk/proto/spire/hostservice/common/metrics/v1;metricsv1b\x06proto3"

var (
	file_spire_hostservice_common_metrics_v1_metrics_proto_rawDescOnce sync.Once
	file_spire_hostservice_common_metrics_v1_metrics_proto_rawDescData []byte
)

func file_spire_hostservice_common_metrics_v1_metrics_proto_rawDescGZIP() []byte {
	file_spire_hostservice_common_metrics_v1_metrics_proto_rawDescOnce.Do(func() {
		file_spire_hostservice_common_metrics_v1_metrics_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_spire_hostservice_common_metrics_v1_metrics_proto_rawDesc), len(file_spire_hostservice_common_metrics_v1_metrics_proto_rawDesc)))
	})
	return file_spire_hostservice_common_metrics_v1_metrics_proto_rawDescData
}

var file_spire_hostservice_common_metrics_v1_metrics_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_spire_hostservice_common_metrics_v1_metrics_proto_goTypes = []any{
	(*SetGaugeRequest)(nil),     // 0: spire.hostservice.common.metrics.v1.SetGaugeRequest
	(*EmitKeyRequest)(nil),      // 1: spire.hostservice.common.metrics.v1.EmitKeyRequest
	(*IncrCounterRequest)(nil),  // 2: spire.hostservice.common.metrics.v1.IncrCounterRequest
	(*AddSampleRequest)(nil),    // 3: spire.hostservice.common.metrics.v1.AddSampleRequest
	(*MeasureSinceRequest)(nil), // 4: spire.hostservice.common.metrics.v1.MeasureSinceRequest
	(*Label)(nil),               // 5: spire.hostservice.common.metrics.v1.Label
	(*emptypb.Empty)(nil),       // 6: google.protobuf.Empty
}
var file_spire_hostservice_common_metrics_v1_metrics_proto_depIdxs = []int32{
	5, // 0: spire.hostservice.common.metrics.v1.SetGaugeRequest.labels:type_name -> spire.hostservice.common.metrics.v1.Label
	5, // 1: spire.hostservice.common.metrics.v1.IncrCounterRequest.labels:type_name -> spire.hostservice.common.metrics.v1.Label
	5, // 2: spire.hostservice.common.metrics.v1.AddSampleRequest.labels:type_name -> spire.hostservice.common.metrics.v1.Label
	5, // 3: spire.hostservice.common.metrics.v1.MeasureSinceRequest.labels:type_name -> spire.hostservice.common.metrics.v1.Label
	0, // 4: spire.hostservice.common.metrics.v1.Metrics.SetGauge:input_type -> spire.hostservice.common.metrics.v1.SetGaugeRequest
	1, // 5: spire.hostservice.common.metrics.v1.Metrics.EmitKey:input_type -> spire.hostservice.common.metrics.v1.EmitKeyRequest
	2, // 6: spire.hostservice.common.metrics.v1.Metrics.IncrCounter:input_type -> spire.hostservice.common.metrics.v1.IncrCounterRequest
	3, // 7: spire.hostservice.common.metrics.v1.Metrics.AddSample:input_type -> spire.hostservice.common.metrics.v1.AddSampleRequest
	4, // 8: spire.hostservice.common.metrics.v1.Metrics.MeasureSince:input_type -> spire.hostservice.common.metrics.v1.MeasureSinceRequest
	6, // 9: spire.hostservice.common.metrics.v1.Metrics.SetGauge:output_type -> google.protobuf.Empty
	6, // 10: spire.hostservice.common.metrics.v1.Metrics.EmitKey:output_type -> google.protobuf.Empty
	6, // 11: spire.hostservice.common.metrics.v1.Metrics.IncrCounter:output_type -> google.protobuf.Empty
	6, // 12: spire.hostservice.common.metrics.v1.Metrics.AddSample:output_type -> google.protobuf.Empty
	6, // 13: spire.hostservice.common.metrics.v1.Metrics.MeasureSince:output_type -> google.protobuf.Empty
	9, // [9:14] is the sub-list for method output_type
	4, // [4:9] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_spire_hostservice_common_metrics_v1_metrics_proto_init() }
func file_spire_hostservice_common_metrics_v1_metrics_proto_init() {
	if File_spire_hostservice_common_metrics_v1_metrics_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_spire_hostservice_common_metrics_v1_metrics_proto_rawDesc), len(file_spire_hostservice_common_metrics_v1_metrics_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_spire_hostservice_common_metrics_v1_metrics_proto_goTypes,
		DependencyIndexes: file_spire_hostservice_common_metrics_v1_metrics_proto_depIdxs,
		MessageInfos:      file_spire_hostservice_common_metrics_v1_metrics_proto_msgTypes,
	}.Build()
	File_spire_hostservice_common_metrics_v1_metrics_proto = out.File
	file_spire_hostservice_common_metrics_v1_metrics_proto_goTypes = nil
	file_spire_hostservice_common_metrics_v1_metrics_proto_depIdxs = nil
}
