// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: spire/hostservice/server/identityprovider/v1/identityprovider.proto

package identityproviderv1

import (
	types "github.com/spiffe/spire-plugin-sdk/proto/spire/plugin/types"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FetchX509IdentityRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FetchX509IdentityRequest) Reset() {
	*x = FetchX509IdentityRequest{}
	mi := &file_spire_hostservice_server_identityprovider_v1_identityprovider_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchX509IdentityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchX509IdentityRequest) ProtoMessage() {}

func (x *FetchX509IdentityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spire_hostservice_server_identityprovider_v1_identityprovider_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchX509IdentityRequest.ProtoReflect.Descriptor instead.
func (*FetchX509IdentityRequest) Descriptor() ([]byte, []int) {
	return file_spire_hostservice_server_identityprovider_v1_identityprovider_proto_rawDescGZIP(), []int{0}
}

type FetchX509IdentityResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The X.509 identity.
	Identity *X509Identity `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
	// Required. The bundle of the trust domain.
	Bundle        *types.Bundle `protobuf:"bytes,2,opt,name=bundle,proto3" json:"bundle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FetchX509IdentityResponse) Reset() {
	*x = FetchX509IdentityResponse{}
	mi := &file_spire_hostservice_server_identityprovider_v1_identityprovider_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchX509IdentityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchX509IdentityResponse) ProtoMessage() {}

func (x *FetchX509IdentityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spire_hostservice_server_identityprovider_v1_identityprovider_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchX509IdentityResponse.ProtoReflect.Descriptor instead.
func (*FetchX509IdentityResponse) Descriptor() ([]byte, []int) {
	return file_spire_hostservice_server_identityprovider_v1_identityprovider_proto_rawDescGZIP(), []int{1}
}

func (x *FetchX509IdentityResponse) GetIdentity() *X509Identity {
	if x != nil {
		return x.Identity
	}
	return nil
}

func (x *FetchX509IdentityResponse) GetBundle() *types.Bundle {
	if x != nil {
		return x.Bundle
	}
	return nil
}

type X509Identity struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The certificate chain (ASN.1 encoded). The first certificate
	// in the chain is the leaf (e.g. the X509-SVID).
	CertChain [][]byte `protobuf:"bytes,1,rep,name=cert_chain,json=certChain,proto3" json:"cert_chain,omitempty"`
	// Required. The private key for the identity (PKCS #8 encoded).
	PrivateKey    []byte `protobuf:"bytes,2,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *X509Identity) Reset() {
	*x = X509Identity{}
	mi := &file_spire_hostservice_server_identityprovider_v1_identityprovider_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *X509Identity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*X509Identity) ProtoMessage() {}

func (x *X509Identity) ProtoReflect() protoreflect.Message {
	mi := &file_spire_hostservice_server_identityprovider_v1_identityprovider_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use X509Identity.ProtoReflect.Descriptor instead.
func (*X509Identity) Descriptor() ([]byte, []int) {
	return file_spire_hostservice_server_identityprovider_v1_identityprovider_proto_rawDescGZIP(), []int{2}
}

func (x *X509Identity) GetCertChain() [][]byte {
	if x != nil {
		return x.CertChain
	}
	return nil
}

func (x *X509Identity) GetPrivateKey() []byte {
	if x != nil {
		return x.PrivateKey
	}
	return nil
}

var File_spire_hostservice_server_identityprovider_v1_identityprovider_proto protoreflect.FileDescriptor

const file_spire_hostservice_server_identityprovider_v1_identityprovider_proto_rawDesc = "" +
	"\n" +
	"Cspire/hostservice/server/identityprovider/v1/identityprovider.proto\x12,spire.hostservice.server.identityprovider.v1\x1a\x1fspire/plugin/types/bundle.proto\"\x1a\n" +
	"\x18FetchX509IdentityRequest\"\xa7\x01\n" +
	"\x19FetchX509IdentityResponse\x12V\n" +
	"\bidentity\x18\x01 \x01(\v2:.spire.hostservice.server.identityprovider.v1.X509IdentityR\bidentity\x122\n" +
	"\x06bundle\x18\x02 \x01(\v2\x1a.spire.plugin.types.BundleR\x06bundle\"N\n" +
	"\fX509Identity\x12\x1d\n" +
	"\n" +
	"cert_chain\x18\x01 \x03(\fR\tcertChain\x12\x1f\n" +
	"\vprivate_key\x18\x02 \x01(\fR\n" +
	"privateKey2\xb9\x01\n" +
	"\x10IdentityProvider\x12\xa4\x01\n" +
	"\x11FetchX509Identity\x12F.spire.hostservice.server.identityprovider.v1.FetchX509IdentityRequest\x1aG.spire.hostservice.server.identityprovider.v1.FetchX509IdentityResponseBjZhgithub.com/spiffe/spire-plugin-sdk/proto/spire/hostservice/server/identityprovider/v1;identityproviderv1b\x06proto3"

var (
	file_spire_hostservice_server_identityprovider_v1_identityprovider_proto_rawDescOnce sync.Once
	file_spire_hostservice_server_identityprovider_v1_identityprovider_proto_rawDescData []byte
)

func file_spire_hostservice_server_identityprovider_v1_identityprovider_proto_rawDescGZIP() []byte {
	file_spire_hostservice_server_identityprovider_v1_identityprovider_proto_rawDescOnce.Do(func() {
		file_spire_hostservice_server_identityprovider_v1_identityprovider_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_spire_hostservice_server_identityprovider_v1_identityprovider_proto_rawDesc), len(file_spire_hostservice_server_identityprovider_v1_identityprovider_proto_rawDesc)))
	})
	return file_spire_hostservice_server_identityprovider_v1_identityprovider_proto_rawDescData
}

var file_spire_hostservice_server_identityprovider_v1_identityprovider_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_spire_hostservice_server_identityprovider_v1_identityprovider_proto_goTypes = []any{
	(*FetchX509IdentityRequest)(nil),  // 0: spire.hostservice.server.identityprovider.v1.FetchX509IdentityRequest
	(*FetchX509IdentityResponse)(nil), // 1: spire.hostservice.server.identityprovider.v1.FetchX509IdentityResponse
	(*X509Identity)(nil),              // 2: spire.hostservice.server.identityprovider.v1.X509Identity
	(*types.Bundle)(nil),              // 3: spire.plugin.types.Bundle
}
var file_spire_hostservice_server_identityprovider_v1_identityprovider_proto_depIdxs = []int32{
	2, // 0: spire.hostservice.server.identityprovider.v1.FetchX509IdentityResponse.identity:type_name -> spire.hostservice.server.identityprovider.v1.X509Identity
	3, // 1: spire.hostservice.server.identityprovider.v1.FetchX509IdentityResponse.bundle:type_name -> spire.plugin.types.Bundle
	0, // 2: spire.hostservice.server.identityprovider.v1.IdentityProvider.FetchX509Identity:input_type -> spire.hostservice.server.identityprovider.v1.FetchX509IdentityRequest
	1, // 3: spire.hostservice.server.identityprovider.v1.IdentityProvider.FetchX509Identity:output_type -> spire.hostservice.server.identityprovider.v1.FetchX509IdentityResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_spire_hostservice_server_identityprovider_v1_identityprovider_proto_init() }
func file_spire_hostservice_server_identityprovider_v1_identityprovider_proto_init() {
	if File_spire_hostservice_server_identityprovider_v1_identityprovider_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_spire_hostservice_server_identityprovider_v1_identityprovider_proto_rawDesc), len(file_spire_hostservice_server_identityprovider_v1_identityprovider_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_spire_hostservice_server_identityprovider_v1_identityprovider_proto_goTypes,
		DependencyIndexes: file_spire_hostservice_server_identityprovider_v1_identityprovider_proto_depIdxs,
		MessageInfos:      file_spire_hostservice_server_identityprovider_v1_identityprovider_proto_msgTypes,
	}.Build()
	File_spire_hostservice_server_identityprovider_v1_identityprovider_proto = out.File
	file_spire_hostservice_server_identityprovider_v1_identityprovider_proto_goTypes = nil
	file_spire_hostservice_server_identityprovider_v1_identityprovider_proto_depIdxs = nil
}
