// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: spire/plugin/types/jwtkey.proto

package types

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type JWTKey struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The PKIX encoded public key.
	PublicKey []byte `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	// The key identifier.
	KeyId string `protobuf:"bytes,2,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	// When the key expires (seconds since Unix epoch). If zero, the key does
	// not expire.
	ExpiresAt int64 `protobuf:"varint,3,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	// Indicates if the key has been tainted. A tainted key is not safe to be used anymore.
	Tainted       bool `protobuf:"varint,4,opt,name=tainted,proto3" json:"tainted,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JWTKey) Reset() {
	*x = JWTKey{}
	mi := &file_spire_plugin_types_jwtkey_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JWTKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JWTKey) ProtoMessage() {}

func (x *JWTKey) ProtoReflect() protoreflect.Message {
	mi := &file_spire_plugin_types_jwtkey_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JWTKey.ProtoReflect.Descriptor instead.
func (*JWTKey) Descriptor() ([]byte, []int) {
	return file_spire_plugin_types_jwtkey_proto_rawDescGZIP(), []int{0}
}

func (x *JWTKey) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *JWTKey) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

func (x *JWTKey) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

func (x *JWTKey) GetTainted() bool {
	if x != nil {
		return x.Tainted
	}
	return false
}

var File_spire_plugin_types_jwtkey_proto protoreflect.FileDescriptor

const file_spire_plugin_types_jwtkey_proto_rawDesc = "" +
	"\n" +
	"\x1fspire/plugin/types/jwtkey.proto\x12\x12spire.plugin.types\"w\n" +
	"\x06JWTKey\x12\x1d\n" +
	"\n" +
	"public_key\x18\x01 \x01(\fR\tpublicKey\x12\x15\n" +
	"\x06key_id\x18\x02 \x01(\tR\x05keyId\x12\x1d\n" +
	"\n" +
	"expires_at\x18\x03 \x01(\x03R\texpiresAt\x12\x18\n" +
	"\atainted\x18\x04 \x01(\bR\ataintedB=Z;github.com/spiffe/spire-plugin-sdk/proto/spire/plugin/typesb\x06proto3"

var (
	file_spire_plugin_types_jwtkey_proto_rawDescOnce sync.Once
	file_spire_plugin_types_jwtkey_proto_rawDescData []byte
)

func file_spire_plugin_types_jwtkey_proto_rawDescGZIP() []byte {
	file_spire_plugin_types_jwtkey_proto_rawDescOnce.Do(func() {
		file_spire_plugin_types_jwtkey_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_spire_plugin_types_jwtkey_proto_rawDesc), len(file_spire_plugin_types_jwtkey_proto_rawDesc)))
	})
	return file_spire_plugin_types_jwtkey_proto_rawDescData
}

var file_spire_plugin_types_jwtkey_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_spire_plugin_types_jwtkey_proto_goTypes = []any{
	(*JWTKey)(nil), // 0: spire.plugin.types.JWTKey
}
var file_spire_plugin_types_jwtkey_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_spire_plugin_types_jwtkey_proto_init() }
func file_spire_plugin_types_jwtkey_proto_init() {
	if File_spire_plugin_types_jwtkey_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_spire_plugin_types_jwtkey_proto_rawDesc), len(file_spire_plugin_types_jwtkey_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_spire_plugin_types_jwtkey_proto_goTypes,
		DependencyIndexes: file_spire_plugin_types_jwtkey_proto_depIdxs,
		MessageInfos:      file_spire_plugin_types_jwtkey_proto_msgTypes,
	}.Build()
	File_spire_plugin_types_jwtkey_proto = out.File
	file_spire_plugin_types_jwtkey_proto_goTypes = nil
	file_spire_plugin_types_jwtkey_proto_depIdxs = nil
}
