// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: spire/plugin/server/upstreamauthority/v1/upstreamauthority.proto

package upstreamauthorityv1

import (
	types "github.com/spiffe/spire-plugin-sdk/proto/spire/plugin/types"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MintX509CARequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. Certificate signing request (PKCS#10)
	Csr []byte `protobuf:"bytes,1,opt,name=csr,proto3" json:"csr,omitempty"`
	// Optional. Preferred TTL is the TTL preferred by SPIRE Server for signed CA. If
	// zero, the plugin should determine its own TTL value. Plugins are free to
	// ignore this and use their own policies around TTLs.
	PreferredTtl  int32 `protobuf:"varint,2,opt,name=preferred_ttl,json=preferredTtl,proto3" json:"preferred_ttl,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MintX509CARequest) Reset() {
	*x = MintX509CARequest{}
	mi := &file_spire_plugin_server_upstreamauthority_v1_upstreamauthority_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MintX509CARequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MintX509CARequest) ProtoMessage() {}

func (x *MintX509CARequest) ProtoReflect() protoreflect.Message {
	mi := &file_spire_plugin_server_upstreamauthority_v1_upstreamauthority_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MintX509CARequest.ProtoReflect.Descriptor instead.
func (*MintX509CARequest) Descriptor() ([]byte, []int) {
	return file_spire_plugin_server_upstreamauthority_v1_upstreamauthority_proto_rawDescGZIP(), []int{0}
}

func (x *MintX509CARequest) GetCsr() []byte {
	if x != nil {
		return x.Csr
	}
	return nil
}

func (x *MintX509CARequest) GetPreferredTtl() int32 {
	if x != nil {
		return x.PreferredTtl
	}
	return 0
}

type MintX509CAResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required on the first response. Contains ASN.1 encoded certificates
	// representing the X.509 CA along with any intermediates necessary to
	// chain back to a certificate present in the upstream_x509_roots. The
	// first certificate in the chain is the newly minted X509 CA certificate.
	X509CaChain []*types.X509Certificate `protobuf:"bytes,1,rep,name=x509_ca_chain,json=x509CaChain,proto3" json:"x509_ca_chain,omitempty"`
	// Required. The trusted X.509 root authorities for the upstream authority.
	UpstreamX509Roots []*types.X509Certificate `protobuf:"bytes,2,rep,name=upstream_x509_roots,json=upstreamX509Roots,proto3" json:"upstream_x509_roots,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *MintX509CAResponse) Reset() {
	*x = MintX509CAResponse{}
	mi := &file_spire_plugin_server_upstreamauthority_v1_upstreamauthority_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MintX509CAResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MintX509CAResponse) ProtoMessage() {}

func (x *MintX509CAResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spire_plugin_server_upstreamauthority_v1_upstreamauthority_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MintX509CAResponse.ProtoReflect.Descriptor instead.
func (*MintX509CAResponse) Descriptor() ([]byte, []int) {
	return file_spire_plugin_server_upstreamauthority_v1_upstreamauthority_proto_rawDescGZIP(), []int{1}
}

func (x *MintX509CAResponse) GetX509CaChain() []*types.X509Certificate {
	if x != nil {
		return x.X509CaChain
	}
	return nil
}

func (x *MintX509CAResponse) GetUpstreamX509Roots() []*types.X509Certificate {
	if x != nil {
		return x.UpstreamX509Roots
	}
	return nil
}

type PublishJWTKeyRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The JWT signing key to publish upstream.
	JwtKey        *types.JWTKey `protobuf:"bytes,1,opt,name=jwt_key,json=jwtKey,proto3" json:"jwt_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublishJWTKeyRequest) Reset() {
	*x = PublishJWTKeyRequest{}
	mi := &file_spire_plugin_server_upstreamauthority_v1_upstreamauthority_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishJWTKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishJWTKeyRequest) ProtoMessage() {}

func (x *PublishJWTKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spire_plugin_server_upstreamauthority_v1_upstreamauthority_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishJWTKeyRequest.ProtoReflect.Descriptor instead.
func (*PublishJWTKeyRequest) Descriptor() ([]byte, []int) {
	return file_spire_plugin_server_upstreamauthority_v1_upstreamauthority_proto_rawDescGZIP(), []int{2}
}

func (x *PublishJWTKeyRequest) GetJwtKey() *types.JWTKey {
	if x != nil {
		return x.JwtKey
	}
	return nil
}

type PublishJWTKeyResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The upstream JWT signing keys.
	UpstreamJwtKeys []*types.JWTKey `protobuf:"bytes,1,rep,name=upstream_jwt_keys,json=upstreamJwtKeys,proto3" json:"upstream_jwt_keys,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *PublishJWTKeyResponse) Reset() {
	*x = PublishJWTKeyResponse{}
	mi := &file_spire_plugin_server_upstreamauthority_v1_upstreamauthority_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishJWTKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishJWTKeyResponse) ProtoMessage() {}

func (x *PublishJWTKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spire_plugin_server_upstreamauthority_v1_upstreamauthority_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishJWTKeyResponse.ProtoReflect.Descriptor instead.
func (*PublishJWTKeyResponse) Descriptor() ([]byte, []int) {
	return file_spire_plugin_server_upstreamauthority_v1_upstreamauthority_proto_rawDescGZIP(), []int{3}
}

func (x *PublishJWTKeyResponse) GetUpstreamJwtKeys() []*types.JWTKey {
	if x != nil {
		return x.UpstreamJwtKeys
	}
	return nil
}

type SubscribeToLocalBundleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeToLocalBundleRequest) Reset() {
	*x = SubscribeToLocalBundleRequest{}
	mi := &file_spire_plugin_server_upstreamauthority_v1_upstreamauthority_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeToLocalBundleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeToLocalBundleRequest) ProtoMessage() {}

func (x *SubscribeToLocalBundleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spire_plugin_server_upstreamauthority_v1_upstreamauthority_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeToLocalBundleRequest.ProtoReflect.Descriptor instead.
func (*SubscribeToLocalBundleRequest) Descriptor() ([]byte, []int) {
	return file_spire_plugin_server_upstreamauthority_v1_upstreamauthority_proto_rawDescGZIP(), []int{4}
}

type SubscribeToLocalBundleResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The trusted X.509 root authorities for the upstream authority.
	UpstreamX509Roots []*types.X509Certificate `protobuf:"bytes,1,rep,name=upstream_x509_roots,json=upstreamX509Roots,proto3" json:"upstream_x509_roots,omitempty"`
	// Required. The upstream JWT signing keys.
	UpstreamJwtKeys []*types.JWTKey `protobuf:"bytes,2,rep,name=upstream_jwt_keys,json=upstreamJwtKeys,proto3" json:"upstream_jwt_keys,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SubscribeToLocalBundleResponse) Reset() {
	*x = SubscribeToLocalBundleResponse{}
	mi := &file_spire_plugin_server_upstreamauthority_v1_upstreamauthority_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeToLocalBundleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeToLocalBundleResponse) ProtoMessage() {}

func (x *SubscribeToLocalBundleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spire_plugin_server_upstreamauthority_v1_upstreamauthority_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeToLocalBundleResponse.ProtoReflect.Descriptor instead.
func (*SubscribeToLocalBundleResponse) Descriptor() ([]byte, []int) {
	return file_spire_plugin_server_upstreamauthority_v1_upstreamauthority_proto_rawDescGZIP(), []int{5}
}

func (x *SubscribeToLocalBundleResponse) GetUpstreamX509Roots() []*types.X509Certificate {
	if x != nil {
		return x.UpstreamX509Roots
	}
	return nil
}

func (x *SubscribeToLocalBundleResponse) GetUpstreamJwtKeys() []*types.JWTKey {
	if x != nil {
		return x.UpstreamJwtKeys
	}
	return nil
}

var File_spire_plugin_server_upstreamauthority_v1_upstreamauthority_proto protoreflect.FileDescriptor

const file_spire_plugin_server_upstreamauthority_v1_upstreamauthority_proto_rawDesc = "" +
	"\n" +
	"@spire/plugin/server/upstreamauthority/v1/upstreamauthority.proto\x12(spire.plugin.server.upstreamauthority.v1\x1a\x1fspire/plugin/types/jwtkey.proto\x1a(spire/plugin/types/x509certificate.proto\"J\n" +
	"\x11MintX509CARequest\x12\x10\n" +
	"\x03csr\x18\x01 \x01(\fR\x03csr\x12#\n" +
	"\rpreferred_ttl\x18\x02 \x01(\x05R\fpreferredTtl\"\xb2\x01\n" +
	"\x12MintX509CAResponse\x12G\n" +
	"\rx509_ca_chain\x18\x01 \x03(\v2#.spire.plugin.types.X509CertificateR\vx509CaChain\x12S\n" +
	"\x13upstream_x509_roots\x18\x02 \x03(\v2#.spire.plugin.types.X509CertificateR\x11upstreamX509Roots\"K\n" +
	"\x14PublishJWTKeyRequest\x123\n" +
	"\ajwt_key\x18\x01 \x01(\v2\x1a.spire.plugin.types.JWTKeyR\x06jwtKey\"_\n" +
	"\x15PublishJWTKeyResponse\x12F\n" +
	"\x11upstream_jwt_keys\x18\x01 \x03(\v2\x1a.spire.plugin.types.JWTKeyR\x0fupstreamJwtKeys\"\x1f\n" +
	"\x1dSubscribeToLocalBundleRequest\"\xbd\x01\n" +
	"\x1eSubscribeToLocalBundleResponse\x12S\n" +
	"\x13upstream_x509_roots\x18\x01 \x03(\v2#.spire.plugin.types.X509CertificateR\x11upstreamX509Roots\x12F\n" +
	"\x11upstream_jwt_keys\x18\x02 \x03(\v2\x1a.spire.plugin.types.JWTKeyR\x0fupstreamJwtKeys2\xfc\x03\n" +
	"\x11UpstreamAuthority\x12\x95\x01\n" +
	"\x16MintX509CAAndSubscribe\x12;.spire.plugin.server.upstreamauthority.v1.MintX509CARequest\x1a<.spire.plugin.server.upstreamauthority.v1.MintX509CAResponse0\x01\x12\x9e\x01\n" +
	"\x19PublishJWTKeyAndSubscribe\x12>.spire.plugin.server.upstreamauthority.v1.PublishJWTKeyRequest\x1a?.spire.plugin.server.upstreamauthority.v1.PublishJWTKeyResponse0\x01\x12\xad\x01\n" +
	"\x16SubscribeToLocalBundle\x12G.spire.plugin.server.upstreamauthority.v1.SubscribeToLocalBundleRequest\x1aH.spire.plugin.server.upstreamauthority.v1.SubscribeToLocalBundleResponse0\x01BgZegithub.com/spiffe/spire-plugin-sdk/proto/spire/plugin/server/upstreamauthority/v1;upstreamauthorityv1b\x06proto3"

var (
	file_spire_plugin_server_upstreamauthority_v1_upstreamauthority_proto_rawDescOnce sync.Once
	file_spire_plugin_server_upstreamauthority_v1_upstreamauthority_proto_rawDescData []byte
)

func file_spire_plugin_server_upstreamauthority_v1_upstreamauthority_proto_rawDescGZIP() []byte {
	file_spire_plugin_server_upstreamauthority_v1_upstreamauthority_proto_rawDescOnce.Do(func() {
		file_spire_plugin_server_upstreamauthority_v1_upstreamauthority_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_spire_plugin_server_upstreamauthority_v1_upstreamauthority_proto_rawDesc), len(file_spire_plugin_server_upstreamauthority_v1_upstreamauthority_proto_rawDesc)))
	})
	return file_spire_plugin_server_upstreamauthority_v1_upstreamauthority_proto_rawDescData
}

var file_spire_plugin_server_upstreamauthority_v1_upstreamauthority_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_spire_plugin_server_upstreamauthority_v1_upstreamauthority_proto_goTypes = []any{
	(*MintX509CARequest)(nil),              // 0: spire.plugin.server.upstreamauthority.v1.MintX509CARequest
	(*MintX509CAResponse)(nil),             // 1: spire.plugin.server.upstreamauthority.v1.MintX509CAResponse
	(*PublishJWTKeyRequest)(nil),           // 2: spire.plugin.server.upstreamauthority.v1.PublishJWTKeyRequest
	(*PublishJWTKeyResponse)(nil),          // 3: spire.plugin.server.upstreamauthority.v1.PublishJWTKeyResponse
	(*SubscribeToLocalBundleRequest)(nil),  // 4: spire.plugin.server.upstreamauthority.v1.SubscribeToLocalBundleRequest
	(*SubscribeToLocalBundleResponse)(nil), // 5: spire.plugin.server.upstreamauthority.v1.SubscribeToLocalBundleResponse
	(*types.X509Certificate)(nil),          // 6: spire.plugin.types.X509Certificate
	(*types.JWTKey)(nil),                   // 7: spire.plugin.types.JWTKey
}
var file_spire_plugin_server_upstreamauthority_v1_upstreamauthority_proto_depIdxs = []int32{
	6, // 0: spire.plugin.server.upstreamauthority.v1.MintX509CAResponse.x509_ca_chain:type_name -> spire.plugin.types.X509Certificate
	6, // 1: spire.plugin.server.upstreamauthority.v1.MintX509CAResponse.upstream_x509_roots:type_name -> spire.plugin.types.X509Certificate
	7, // 2: spire.plugin.server.upstreamauthority.v1.PublishJWTKeyRequest.jwt_key:type_name -> spire.plugin.types.JWTKey
	7, // 3: spire.plugin.server.upstreamauthority.v1.PublishJWTKeyResponse.upstream_jwt_keys:type_name -> spire.plugin.types.JWTKey
	6, // 4: spire.plugin.server.upstreamauthority.v1.SubscribeToLocalBundleResponse.upstream_x509_roots:type_name -> spire.plugin.types.X509Certificate
	7, // 5: spire.plugin.server.upstreamauthority.v1.SubscribeToLocalBundleResponse.upstream_jwt_keys:type_name -> spire.plugin.types.JWTKey
	0, // 6: spire.plugin.server.upstreamauthority.v1.UpstreamAuthority.MintX509CAAndSubscribe:input_type -> spire.plugin.server.upstreamauthority.v1.MintX509CARequest
	2, // 7: spire.plugin.server.upstreamauthority.v1.UpstreamAuthority.PublishJWTKeyAndSubscribe:input_type -> spire.plugin.server.upstreamauthority.v1.PublishJWTKeyRequest
	4, // 8: spire.plugin.server.upstreamauthority.v1.UpstreamAuthority.SubscribeToLocalBundle:input_type -> spire.plugin.server.upstreamauthority.v1.SubscribeToLocalBundleRequest
	1, // 9: spire.plugin.server.upstreamauthority.v1.UpstreamAuthority.MintX509CAAndSubscribe:output_type -> spire.plugin.server.upstreamauthority.v1.MintX509CAResponse
	3, // 10: spire.plugin.server.upstreamauthority.v1.UpstreamAuthority.PublishJWTKeyAndSubscribe:output_type -> spire.plugin.server.upstreamauthority.v1.PublishJWTKeyResponse
	5, // 11: spire.plugin.server.upstreamauthority.v1.UpstreamAuthority.SubscribeToLocalBundle:output_type -> spire.plugin.server.upstreamauthority.v1.SubscribeToLocalBundleResponse
	9, // [9:12] is the sub-list for method output_type
	6, // [6:9] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_spire_plugin_server_upstreamauthority_v1_upstreamauthority_proto_init() }
func file_spire_plugin_server_upstreamauthority_v1_upstreamauthority_proto_init() {
	if File_spire_plugin_server_upstreamauthority_v1_upstreamauthority_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_spire_plugin_server_upstreamauthority_v1_upstreamauthority_proto_rawDesc), len(file_spire_plugin_server_upstreamauthority_v1_upstreamauthority_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_spire_plugin_server_upstreamauthority_v1_upstreamauthority_proto_goTypes,
		DependencyIndexes: file_spire_plugin_server_upstreamauthority_v1_upstreamauthority_proto_depIdxs,
		MessageInfos:      file_spire_plugin_server_upstreamauthority_v1_upstreamauthority_proto_msgTypes,
	}.Build()
	File_spire_plugin_server_upstreamauthority_v1_upstreamauthority_proto = out.File
	file_spire_plugin_server_upstreamauthority_v1_upstreamauthority_proto_goTypes = nil
	file_spire_plugin_server_upstreamauthority_v1_upstreamauthority_proto_depIdxs = nil
}
