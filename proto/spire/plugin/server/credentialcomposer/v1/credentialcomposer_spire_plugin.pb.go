// Code generated by protoc-gen-go-spire. DO NOT EDIT.

package credentialcomposerv1

import (
	pluginsdk "github.com/spiffe/spire-plugin-sdk/pluginsdk"
	grpc "google.golang.org/grpc"
)

func CredentialComposerPluginServer(server CredentialComposerServer) pluginsdk.PluginServer {
	return credentialComposerPluginServer{CredentialComposerServer: server}
}

type credentialComposerPluginServer struct {
	CredentialComposerServer
}

func (s credentialComposerPluginServer) Type() string {
	return "CredentialComposer"
}

func (s credentialComposerPluginServer) GRPCServiceName() string {
	return "spire.plugin.server.credentialcomposer.v1.CredentialComposer"
}

func (s credentialComposerPluginServer) RegisterServer(server *grpc.Server) interface{} {
	RegisterCredentialComposerServer(server, s.CredentialComposerServer)
	return s.CredentialComposerServer
}

type CredentialComposerPluginClient struct {
	CredentialComposerClient
}

func (s CredentialComposerPluginClient) Type() string {
	return "CredentialComposer"
}

func (c *CredentialComposerPluginClient) IsInitialized() bool {
	return c.CredentialComposerClient != nil
}

func (c *CredentialComposerPluginClient) GRPCServiceName() string {
	return "spire.plugin.server.credentialcomposer.v1.CredentialComposer"
}

func (c *CredentialComposerPluginClient) InitClient(conn grpc.ClientConnInterface) interface{} {
	c.CredentialComposerClient = NewCredentialComposerClient(conn)
	return c.CredentialComposerClient
}
