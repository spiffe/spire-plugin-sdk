// Code generated by protoc-gen-go-spire. DO NOT EDIT.

package bundlepublisherv1

import (
	pluginsdk "github.com/spiffe/spire-plugin-sdk/pluginsdk"
	grpc "google.golang.org/grpc"
)

func BundlePublisherPluginServer(server BundlePublisherServer) pluginsdk.PluginServer {
	return bundlePublisherPluginServer{BundlePublisherServer: server}
}

type bundlePublisherPluginServer struct {
	BundlePublisherServer
}

func (s bundlePublisherPluginServer) Type() string {
	return "BundlePublisher"
}

func (s bundlePublisherPluginServer) GRPCServiceName() string {
	return "spire.plugin.server.bundlepublisher.v1.BundlePublisher"
}

func (s bundlePublisherPluginServer) RegisterServer(server *grpc.Server) interface{} {
	RegisterBundlePublisherServer(server, s.BundlePublisherServer)
	return s.BundlePublisherServer
}

type BundlePublisherPluginClient struct {
	BundlePublisherClient
}

func (s BundlePublisherPluginClient) Type() string {
	return "BundlePublisher"
}

func (c *BundlePublisherPluginClient) IsInitialized() bool {
	return c.BundlePublisherClient != nil
}

func (c *BundlePublisherPluginClient) GRPCServiceName() string {
	return "spire.plugin.server.bundlepublisher.v1.BundlePublisher"
}

func (c *BundlePublisherPluginClient) InitClient(conn grpc.ClientConnInterface) interface{} {
	c.BundlePublisherClient = NewBundlePublisherClient(conn)
	return c.BundlePublisherClient
}
