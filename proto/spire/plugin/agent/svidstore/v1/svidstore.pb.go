// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: spire/plugin/agent/svidstore/v1/svidstore.proto

package svidstorev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PutX509SVIDRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// X509-SVID to be stored
	Svid *X509SVID `protobuf:"bytes,1,opt,name=svid,proto3" json:"svid,omitempty"`
	// Relevant information to store on specific platform
	Metadata []string `protobuf:"bytes,2,rep,name=metadata,proto3" json:"metadata,omitempty"`
	// Federated bundles to store
	FederatedBundles map[string][]byte `protobuf:"bytes,3,rep,name=federated_bundles,json=federatedBundles,proto3" json:"federated_bundles,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *PutX509SVIDRequest) Reset() {
	*x = PutX509SVIDRequest{}
	mi := &file_spire_plugin_agent_svidstore_v1_svidstore_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PutX509SVIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutX509SVIDRequest) ProtoMessage() {}

func (x *PutX509SVIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spire_plugin_agent_svidstore_v1_svidstore_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutX509SVIDRequest.ProtoReflect.Descriptor instead.
func (*PutX509SVIDRequest) Descriptor() ([]byte, []int) {
	return file_spire_plugin_agent_svidstore_v1_svidstore_proto_rawDescGZIP(), []int{0}
}

func (x *PutX509SVIDRequest) GetSvid() *X509SVID {
	if x != nil {
		return x.Svid
	}
	return nil
}

func (x *PutX509SVIDRequest) GetMetadata() []string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *PutX509SVIDRequest) GetFederatedBundles() map[string][]byte {
	if x != nil {
		return x.FederatedBundles
	}
	return nil
}

type PutX509SVIDResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PutX509SVIDResponse) Reset() {
	*x = PutX509SVIDResponse{}
	mi := &file_spire_plugin_agent_svidstore_v1_svidstore_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PutX509SVIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutX509SVIDResponse) ProtoMessage() {}

func (x *PutX509SVIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spire_plugin_agent_svidstore_v1_svidstore_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutX509SVIDResponse.ProtoReflect.Descriptor instead.
func (*PutX509SVIDResponse) Descriptor() ([]byte, []int) {
	return file_spire_plugin_agent_svidstore_v1_svidstore_proto_rawDescGZIP(), []int{1}
}

type DeleteX509SVIDRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Relevant information to delete on specific platform
	Metadata      []string `protobuf:"bytes,1,rep,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteX509SVIDRequest) Reset() {
	*x = DeleteX509SVIDRequest{}
	mi := &file_spire_plugin_agent_svidstore_v1_svidstore_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteX509SVIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteX509SVIDRequest) ProtoMessage() {}

func (x *DeleteX509SVIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spire_plugin_agent_svidstore_v1_svidstore_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteX509SVIDRequest.ProtoReflect.Descriptor instead.
func (*DeleteX509SVIDRequest) Descriptor() ([]byte, []int) {
	return file_spire_plugin_agent_svidstore_v1_svidstore_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteX509SVIDRequest) GetMetadata() []string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type DeleteX509SVIDResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteX509SVIDResponse) Reset() {
	*x = DeleteX509SVIDResponse{}
	mi := &file_spire_plugin_agent_svidstore_v1_svidstore_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteX509SVIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteX509SVIDResponse) ProtoMessage() {}

func (x *DeleteX509SVIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spire_plugin_agent_svidstore_v1_svidstore_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteX509SVIDResponse.ProtoReflect.Descriptor instead.
func (*DeleteX509SVIDResponse) Descriptor() ([]byte, []int) {
	return file_spire_plugin_agent_svidstore_v1_svidstore_proto_rawDescGZIP(), []int{3}
}

type X509SVID struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// SPIFFE ID of the SVID.
	SpiffeID string `protobuf:"bytes,1,opt,name=spiffeID,proto3" json:"spiffeID,omitempty"`
	// Certificate and intermediates (ASN.1 DER encoded)
	CertChain [][]byte `protobuf:"bytes,2,rep,name=cert_chain,json=certChain,proto3" json:"cert_chain,omitempty"`
	// Private key (ASN.1 DER encoded)
	PrivateKey []byte `protobuf:"bytes,3,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	// Bundle certificates (ASN.1 DER encoded)
	Bundle [][]byte `protobuf:"bytes,4,rep,name=bundle,proto3" json:"bundle,omitempty"`
	// Expiration timestamp (seconds since Unix epoch).
	ExpiresAt     int64 `protobuf:"varint,5,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *X509SVID) Reset() {
	*x = X509SVID{}
	mi := &file_spire_plugin_agent_svidstore_v1_svidstore_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *X509SVID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*X509SVID) ProtoMessage() {}

func (x *X509SVID) ProtoReflect() protoreflect.Message {
	mi := &file_spire_plugin_agent_svidstore_v1_svidstore_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use X509SVID.ProtoReflect.Descriptor instead.
func (*X509SVID) Descriptor() ([]byte, []int) {
	return file_spire_plugin_agent_svidstore_v1_svidstore_proto_rawDescGZIP(), []int{4}
}

func (x *X509SVID) GetSpiffeID() string {
	if x != nil {
		return x.SpiffeID
	}
	return ""
}

func (x *X509SVID) GetCertChain() [][]byte {
	if x != nil {
		return x.CertChain
	}
	return nil
}

func (x *X509SVID) GetPrivateKey() []byte {
	if x != nil {
		return x.PrivateKey
	}
	return nil
}

func (x *X509SVID) GetBundle() [][]byte {
	if x != nil {
		return x.Bundle
	}
	return nil
}

func (x *X509SVID) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

var File_spire_plugin_agent_svidstore_v1_svidstore_proto protoreflect.FileDescriptor

const file_spire_plugin_agent_svidstore_v1_svidstore_proto_rawDesc = "" +
	"\n" +
	"/spire/plugin/agent/svidstore/v1/svidstore.proto\x12\x1fspire.plugin.agent.svidstore.v1\"\xac\x02\n" +
	"\x12PutX509SVIDRequest\x12=\n" +
	"\x04svid\x18\x01 \x01(\v2).spire.plugin.agent.svidstore.v1.X509SVIDR\x04svid\x12\x1a\n" +
	"\bmetadata\x18\x02 \x03(\tR\bmetadata\x12v\n" +
	"\x11federated_bundles\x18\x03 \x03(\v2I.spire.plugin.agent.svidstore.v1.PutX509SVIDRequest.FederatedBundlesEntryR\x10federatedBundles\x1aC\n" +
	"\x15FederatedBundlesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value:\x028\x01\"\x15\n" +
	"\x13PutX509SVIDResponse\"3\n" +
	"\x15DeleteX509SVIDRequest\x12\x1a\n" +
	"\bmetadata\x18\x01 \x03(\tR\bmetadata\"\x18\n" +
	"\x16DeleteX509SVIDResponse\"\x9d\x01\n" +
	"\bX509SVID\x12\x1a\n" +
	"\bspiffeID\x18\x01 \x01(\tR\bspiffeID\x12\x1d\n" +
	"\n" +
	"cert_chain\x18\x02 \x03(\fR\tcertChain\x12\x1f\n" +
	"\vprivate_key\x18\x03 \x01(\fR\n" +
	"privateKey\x12\x16\n" +
	"\x06bundle\x18\x04 \x03(\fR\x06bundle\x12\x1d\n" +
	"\n" +
	"expires_at\x18\x05 \x01(\x03R\texpiresAt2\x89\x02\n" +
	"\tSVIDStore\x12x\n" +
	"\vPutX509SVID\x123.spire.plugin.agent.svidstore.v1.PutX509SVIDRequest\x1a4.spire.plugin.agent.svidstore.v1.PutX509SVIDResponse\x12\x81\x01\n" +
	"\x0eDeleteX509SVID\x126.spire.plugin.agent.svidstore.v1.DeleteX509SVIDRequest\x1a7.spire.plugin.agent.svidstore.v1.DeleteX509SVIDResponseBVZTgithub.com/spiffe/spire-plugin-sdk/proto/spire/plugin/agent/svidstore/v1;svidstorev1b\x06proto3"

var (
	file_spire_plugin_agent_svidstore_v1_svidstore_proto_rawDescOnce sync.Once
	file_spire_plugin_agent_svidstore_v1_svidstore_proto_rawDescData []byte
)

func file_spire_plugin_agent_svidstore_v1_svidstore_proto_rawDescGZIP() []byte {
	file_spire_plugin_agent_svidstore_v1_svidstore_proto_rawDescOnce.Do(func() {
		file_spire_plugin_agent_svidstore_v1_svidstore_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_spire_plugin_agent_svidstore_v1_svidstore_proto_rawDesc), len(file_spire_plugin_agent_svidstore_v1_svidstore_proto_rawDesc)))
	})
	return file_spire_plugin_agent_svidstore_v1_svidstore_proto_rawDescData
}

var file_spire_plugin_agent_svidstore_v1_svidstore_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_spire_plugin_agent_svidstore_v1_svidstore_proto_goTypes = []any{
	(*PutX509SVIDRequest)(nil),     // 0: spire.plugin.agent.svidstore.v1.PutX509SVIDRequest
	(*PutX509SVIDResponse)(nil),    // 1: spire.plugin.agent.svidstore.v1.PutX509SVIDResponse
	(*DeleteX509SVIDRequest)(nil),  // 2: spire.plugin.agent.svidstore.v1.DeleteX509SVIDRequest
	(*DeleteX509SVIDResponse)(nil), // 3: spire.plugin.agent.svidstore.v1.DeleteX509SVIDResponse
	(*X509SVID)(nil),               // 4: spire.plugin.agent.svidstore.v1.X509SVID
	nil,                            // 5: spire.plugin.agent.svidstore.v1.PutX509SVIDRequest.FederatedBundlesEntry
}
var file_spire_plugin_agent_svidstore_v1_svidstore_proto_depIdxs = []int32{
	4, // 0: spire.plugin.agent.svidstore.v1.PutX509SVIDRequest.svid:type_name -> spire.plugin.agent.svidstore.v1.X509SVID
	5, // 1: spire.plugin.agent.svidstore.v1.PutX509SVIDRequest.federated_bundles:type_name -> spire.plugin.agent.svidstore.v1.PutX509SVIDRequest.FederatedBundlesEntry
	0, // 2: spire.plugin.agent.svidstore.v1.SVIDStore.PutX509SVID:input_type -> spire.plugin.agent.svidstore.v1.PutX509SVIDRequest
	2, // 3: spire.plugin.agent.svidstore.v1.SVIDStore.DeleteX509SVID:input_type -> spire.plugin.agent.svidstore.v1.DeleteX509SVIDRequest
	1, // 4: spire.plugin.agent.svidstore.v1.SVIDStore.PutX509SVID:output_type -> spire.plugin.agent.svidstore.v1.PutX509SVIDResponse
	3, // 5: spire.plugin.agent.svidstore.v1.SVIDStore.DeleteX509SVID:output_type -> spire.plugin.agent.svidstore.v1.DeleteX509SVIDResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_spire_plugin_agent_svidstore_v1_svidstore_proto_init() }
func file_spire_plugin_agent_svidstore_v1_svidstore_proto_init() {
	if File_spire_plugin_agent_svidstore_v1_svidstore_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_spire_plugin_agent_svidstore_v1_svidstore_proto_rawDesc), len(file_spire_plugin_agent_svidstore_v1_svidstore_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_spire_plugin_agent_svidstore_v1_svidstore_proto_goTypes,
		DependencyIndexes: file_spire_plugin_agent_svidstore_v1_svidstore_proto_depIdxs,
		MessageInfos:      file_spire_plugin_agent_svidstore_v1_svidstore_proto_msgTypes,
	}.Build()
	File_spire_plugin_agent_svidstore_v1_svidstore_proto = out.File
	file_spire_plugin_agent_svidstore_v1_svidstore_proto_goTypes = nil
	file_spire_plugin_agent_svidstore_v1_svidstore_proto_depIdxs = nil
}
