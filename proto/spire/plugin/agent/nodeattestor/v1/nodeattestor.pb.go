// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.20.1
// source: spire/plugin/agent/nodeattestor/v1/nodeattestor.proto

package nodeattestorv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Challenge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The challenge issued by SPIRE Server. See the AidAttestation
	// RPC for details.
	Challenge []byte `protobuf:"bytes,1,opt,name=challenge,proto3" json:"challenge,omitempty"`
}

func (x *Challenge) Reset() {
	*x = Challenge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spire_plugin_agent_nodeattestor_v1_nodeattestor_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Challenge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Challenge) ProtoMessage() {}

func (x *Challenge) ProtoReflect() protoreflect.Message {
	mi := &file_spire_plugin_agent_nodeattestor_v1_nodeattestor_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Challenge.ProtoReflect.Descriptor instead.
func (*Challenge) Descriptor() ([]byte, []int) {
	return file_spire_plugin_agent_nodeattestor_v1_nodeattestor_proto_rawDescGZIP(), []int{0}
}

func (x *Challenge) GetChallenge() []byte {
	if x != nil {
		return x.Challenge
	}
	return nil
}

type PayloadOrChallengeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Data:
	//	*PayloadOrChallengeResponse_Payload
	//	*PayloadOrChallengeResponse_ChallengeResponse
	Data isPayloadOrChallengeResponse_Data `protobuf_oneof:"data"`
}

func (x *PayloadOrChallengeResponse) Reset() {
	*x = PayloadOrChallengeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spire_plugin_agent_nodeattestor_v1_nodeattestor_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayloadOrChallengeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayloadOrChallengeResponse) ProtoMessage() {}

func (x *PayloadOrChallengeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spire_plugin_agent_nodeattestor_v1_nodeattestor_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayloadOrChallengeResponse.ProtoReflect.Descriptor instead.
func (*PayloadOrChallengeResponse) Descriptor() ([]byte, []int) {
	return file_spire_plugin_agent_nodeattestor_v1_nodeattestor_proto_rawDescGZIP(), []int{1}
}

func (m *PayloadOrChallengeResponse) GetData() isPayloadOrChallengeResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *PayloadOrChallengeResponse) GetPayload() []byte {
	if x, ok := x.GetData().(*PayloadOrChallengeResponse_Payload); ok {
		return x.Payload
	}
	return nil
}

func (x *PayloadOrChallengeResponse) GetChallengeResponse() []byte {
	if x, ok := x.GetData().(*PayloadOrChallengeResponse_ChallengeResponse); ok {
		return x.ChallengeResponse
	}
	return nil
}

type isPayloadOrChallengeResponse_Data interface {
	isPayloadOrChallengeResponse_Data()
}

type PayloadOrChallengeResponse_Payload struct {
	// Required in the first response. This is the attestation payload that
	// is to be sent to SPIRE Server. See the AidAttestation RPC for
	// details.
	Payload []byte `protobuf:"bytes,1,opt,name=payload,proto3,oneof"`
}

type PayloadOrChallengeResponse_ChallengeResponse struct {
	// Required in subsequent responses. The challenge response to a
	// challenge issued by SPIRE Server. See the AidAttestation RPC for
	// details.
	ChallengeResponse []byte `protobuf:"bytes,2,opt,name=challenge_response,json=challengeResponse,proto3,oneof"`
}

func (*PayloadOrChallengeResponse_Payload) isPayloadOrChallengeResponse_Data() {}

func (*PayloadOrChallengeResponse_ChallengeResponse) isPayloadOrChallengeResponse_Data() {}

var File_spire_plugin_agent_nodeattestor_v1_nodeattestor_proto protoreflect.FileDescriptor

var file_spire_plugin_agent_nodeattestor_v1_nodeattestor_proto_rawDesc = []byte{
	0x0a, 0x35, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2f, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x6f,
	0x72, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x6f,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x22, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x70,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x6e, 0x6f, 0x64, 0x65,
	0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x22, 0x29, 0x0a, 0x09, 0x43,
	0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6c,
	0x6c, 0x65, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x63, 0x68, 0x61,
	0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x22, 0x71, 0x0a, 0x1a, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x4f, 0x72, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x12, 0x2f, 0x0a, 0x12, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x11,
	0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0x94, 0x01, 0x0a, 0x0c, 0x4e, 0x6f,
	0x64, 0x65, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x12, 0x83, 0x01, 0x0a, 0x0e, 0x41,
	0x69, 0x64, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x2e,
	0x73, 0x70, 0x69, 0x72, 0x65, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x1a, 0x3e, 0x2e, 0x73,
	0x70, 0x69, 0x72, 0x65, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x4f, 0x72, 0x43, 0x68, 0x61, 0x6c, 0x6c,
	0x65, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x30, 0x01,
	0x42, 0x5c, 0x5a, 0x5a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73,
	0x70, 0x69, 0x66, 0x66, 0x65, 0x2f, 0x73, 0x70, 0x69, 0x72, 0x65, 0x2d, 0x70, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x70, 0x69,
	0x72, 0x65, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2f,
	0x6e, 0x6f, 0x64, 0x65, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x2f, 0x76, 0x31, 0x3b,
	0x6e, 0x6f, 0x64, 0x65, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x76, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_spire_plugin_agent_nodeattestor_v1_nodeattestor_proto_rawDescOnce sync.Once
	file_spire_plugin_agent_nodeattestor_v1_nodeattestor_proto_rawDescData = file_spire_plugin_agent_nodeattestor_v1_nodeattestor_proto_rawDesc
)

func file_spire_plugin_agent_nodeattestor_v1_nodeattestor_proto_rawDescGZIP() []byte {
	file_spire_plugin_agent_nodeattestor_v1_nodeattestor_proto_rawDescOnce.Do(func() {
		file_spire_plugin_agent_nodeattestor_v1_nodeattestor_proto_rawDescData = protoimpl.X.CompressGZIP(file_spire_plugin_agent_nodeattestor_v1_nodeattestor_proto_rawDescData)
	})
	return file_spire_plugin_agent_nodeattestor_v1_nodeattestor_proto_rawDescData
}

var file_spire_plugin_agent_nodeattestor_v1_nodeattestor_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_spire_plugin_agent_nodeattestor_v1_nodeattestor_proto_goTypes = []interface{}{
	(*Challenge)(nil),                  // 0: spire.plugin.agent.nodeattestor.v1.Challenge
	(*PayloadOrChallengeResponse)(nil), // 1: spire.plugin.agent.nodeattestor.v1.PayloadOrChallengeResponse
}
var file_spire_plugin_agent_nodeattestor_v1_nodeattestor_proto_depIdxs = []int32{
	0, // 0: spire.plugin.agent.nodeattestor.v1.NodeAttestor.AidAttestation:input_type -> spire.plugin.agent.nodeattestor.v1.Challenge
	1, // 1: spire.plugin.agent.nodeattestor.v1.NodeAttestor.AidAttestation:output_type -> spire.plugin.agent.nodeattestor.v1.PayloadOrChallengeResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_spire_plugin_agent_nodeattestor_v1_nodeattestor_proto_init() }
func file_spire_plugin_agent_nodeattestor_v1_nodeattestor_proto_init() {
	if File_spire_plugin_agent_nodeattestor_v1_nodeattestor_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_spire_plugin_agent_nodeattestor_v1_nodeattestor_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Challenge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spire_plugin_agent_nodeattestor_v1_nodeattestor_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayloadOrChallengeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_spire_plugin_agent_nodeattestor_v1_nodeattestor_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*PayloadOrChallengeResponse_Payload)(nil),
		(*PayloadOrChallengeResponse_ChallengeResponse)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_spire_plugin_agent_nodeattestor_v1_nodeattestor_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_spire_plugin_agent_nodeattestor_v1_nodeattestor_proto_goTypes,
		DependencyIndexes: file_spire_plugin_agent_nodeattestor_v1_nodeattestor_proto_depIdxs,
		MessageInfos:      file_spire_plugin_agent_nodeattestor_v1_nodeattestor_proto_msgTypes,
	}.Build()
	File_spire_plugin_agent_nodeattestor_v1_nodeattestor_proto = out.File
	file_spire_plugin_agent_nodeattestor_v1_nodeattestor_proto_rawDesc = nil
	file_spire_plugin_agent_nodeattestor_v1_nodeattestor_proto_goTypes = nil
	file_spire_plugin_agent_nodeattestor_v1_nodeattestor_proto_depIdxs = nil
}
