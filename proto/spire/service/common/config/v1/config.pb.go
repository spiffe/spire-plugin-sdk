// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: spire/service/common/config/v1/config.proto

package configv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ConfigureRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. Core SPIRE configuration.
	CoreConfiguration *CoreConfiguration `protobuf:"bytes,1,opt,name=core_configuration,json=coreConfiguration,proto3" json:"core_configuration,omitempty"`
	// Required. HCL encoded plugin configuration.
	HclConfiguration string `protobuf:"bytes,2,opt,name=hcl_configuration,json=hclConfiguration,proto3" json:"hcl_configuration,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ConfigureRequest) Reset() {
	*x = ConfigureRequest{}
	mi := &file_spire_service_common_config_v1_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigureRequest) ProtoMessage() {}

func (x *ConfigureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spire_service_common_config_v1_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigureRequest.ProtoReflect.Descriptor instead.
func (*ConfigureRequest) Descriptor() ([]byte, []int) {
	return file_spire_service_common_config_v1_config_proto_rawDescGZIP(), []int{0}
}

func (x *ConfigureRequest) GetCoreConfiguration() *CoreConfiguration {
	if x != nil {
		return x.CoreConfiguration
	}
	return nil
}

func (x *ConfigureRequest) GetHclConfiguration() string {
	if x != nil {
		return x.HclConfiguration
	}
	return ""
}

type ConfigureResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigureResponse) Reset() {
	*x = ConfigureResponse{}
	mi := &file_spire_service_common_config_v1_config_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigureResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigureResponse) ProtoMessage() {}

func (x *ConfigureResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spire_service_common_config_v1_config_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigureResponse.ProtoReflect.Descriptor instead.
func (*ConfigureResponse) Descriptor() ([]byte, []int) {
	return file_spire_service_common_config_v1_config_proto_rawDescGZIP(), []int{1}
}

type ValidateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. Core SPIRE configuration.
	CoreConfiguration *CoreConfiguration `protobuf:"bytes,1,opt,name=core_configuration,json=coreConfiguration,proto3" json:"core_configuration,omitempty"`
	// Required. HCL encoded plugin configuration.
	HclConfiguration string `protobuf:"bytes,2,opt,name=hcl_configuration,json=hclConfiguration,proto3" json:"hcl_configuration,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ValidateRequest) Reset() {
	*x = ValidateRequest{}
	mi := &file_spire_service_common_config_v1_config_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateRequest) ProtoMessage() {}

func (x *ValidateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spire_service_common_config_v1_config_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateRequest.ProtoReflect.Descriptor instead.
func (*ValidateRequest) Descriptor() ([]byte, []int) {
	return file_spire_service_common_config_v1_config_proto_rawDescGZIP(), []int{2}
}

func (x *ValidateRequest) GetCoreConfiguration() *CoreConfiguration {
	if x != nil {
		return x.CoreConfiguration
	}
	return nil
}

func (x *ValidateRequest) GetHclConfiguration() string {
	if x != nil {
		return x.HclConfiguration
	}
	return ""
}

type ValidateResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. True when the plugin deems the configuration usable.
	Valid bool `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`
	// Examples of invalid configuration notes include:
	// - value for "plugin.port" is not a number.
	// - missing field "plugin.user"
	// - specified SPIFFE ID in "plugin.spiffe_id" is not within system trust domain.
	// - etc.
	Notes         []string `protobuf:"bytes,2,rep,name=notes,proto3" json:"notes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateResponse) Reset() {
	*x = ValidateResponse{}
	mi := &file_spire_service_common_config_v1_config_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateResponse) ProtoMessage() {}

func (x *ValidateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spire_service_common_config_v1_config_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateResponse.ProtoReflect.Descriptor instead.
func (*ValidateResponse) Descriptor() ([]byte, []int) {
	return file_spire_service_common_config_v1_config_proto_rawDescGZIP(), []int{3}
}

func (x *ValidateResponse) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

func (x *ValidateResponse) GetNotes() []string {
	if x != nil {
		return x.Notes
	}
	return nil
}

type CoreConfiguration struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The trust domain name SPIRE is configured with (e.g.
	// "example.org").
	TrustDomain   string `protobuf:"bytes,1,opt,name=trust_domain,json=trustDomain,proto3" json:"trust_domain,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CoreConfiguration) Reset() {
	*x = CoreConfiguration{}
	mi := &file_spire_service_common_config_v1_config_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CoreConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoreConfiguration) ProtoMessage() {}

func (x *CoreConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_spire_service_common_config_v1_config_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoreConfiguration.ProtoReflect.Descriptor instead.
func (*CoreConfiguration) Descriptor() ([]byte, []int) {
	return file_spire_service_common_config_v1_config_proto_rawDescGZIP(), []int{4}
}

func (x *CoreConfiguration) GetTrustDomain() string {
	if x != nil {
		return x.TrustDomain
	}
	return ""
}

var File_spire_service_common_config_v1_config_proto protoreflect.FileDescriptor

const file_spire_service_common_config_v1_config_proto_rawDesc = "" +
	"\n" +
	"+spire/service/common/config/v1/config.proto\x12\x1espire.service.common.config.v1\"\xa1\x01\n" +
	"\x10ConfigureRequest\x12`\n" +
	"\x12core_configuration\x18\x01 \x01(\v21.spire.service.common.config.v1.CoreConfigurationR\x11coreConfiguration\x12+\n" +
	"\x11hcl_configuration\x18\x02 \x01(\tR\x10hclConfiguration\"\x13\n" +
	"\x11ConfigureResponse\"\xa0\x01\n" +
	"\x0fValidateRequest\x12`\n" +
	"\x12core_configuration\x18\x01 \x01(\v21.spire.service.common.config.v1.CoreConfigurationR\x11coreConfiguration\x12+\n" +
	"\x11hcl_configuration\x18\x02 \x01(\tR\x10hclConfiguration\">\n" +
	"\x10ValidateResponse\x12\x14\n" +
	"\x05valid\x18\x01 \x01(\bR\x05valid\x12\x14\n" +
	"\x05notes\x18\x02 \x03(\tR\x05notes\"6\n" +
	"\x11CoreConfiguration\x12!\n" +
	"\ftrust_domain\x18\x01 \x01(\tR\vtrustDomain2\xe9\x01\n" +
	"\x06Config\x12p\n" +
	"\tConfigure\x120.spire.service.common.config.v1.ConfigureRequest\x1a1.spire.service.common.config.v1.ConfigureResponse\x12m\n" +
	"\bValidate\x12/.spire.service.common.config.v1.ValidateRequest\x1a0.spire.service.common.config.v1.ValidateResponseBRZPgithub.com/spiffe/spire-plugin-sdk/proto/spire/service/common/config/v1;configv1b\x06proto3"

var (
	file_spire_service_common_config_v1_config_proto_rawDescOnce sync.Once
	file_spire_service_common_config_v1_config_proto_rawDescData []byte
)

func file_spire_service_common_config_v1_config_proto_rawDescGZIP() []byte {
	file_spire_service_common_config_v1_config_proto_rawDescOnce.Do(func() {
		file_spire_service_common_config_v1_config_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_spire_service_common_config_v1_config_proto_rawDesc), len(file_spire_service_common_config_v1_config_proto_rawDesc)))
	})
	return file_spire_service_common_config_v1_config_proto_rawDescData
}

var file_spire_service_common_config_v1_config_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_spire_service_common_config_v1_config_proto_goTypes = []any{
	(*ConfigureRequest)(nil),  // 0: spire.service.common.config.v1.ConfigureRequest
	(*ConfigureResponse)(nil), // 1: spire.service.common.config.v1.ConfigureResponse
	(*ValidateRequest)(nil),   // 2: spire.service.common.config.v1.ValidateRequest
	(*ValidateResponse)(nil),  // 3: spire.service.common.config.v1.ValidateResponse
	(*CoreConfiguration)(nil), // 4: spire.service.common.config.v1.CoreConfiguration
}
var file_spire_service_common_config_v1_config_proto_depIdxs = []int32{
	4, // 0: spire.service.common.config.v1.ConfigureRequest.core_configuration:type_name -> spire.service.common.config.v1.CoreConfiguration
	4, // 1: spire.service.common.config.v1.ValidateRequest.core_configuration:type_name -> spire.service.common.config.v1.CoreConfiguration
	0, // 2: spire.service.common.config.v1.Config.Configure:input_type -> spire.service.common.config.v1.ConfigureRequest
	2, // 3: spire.service.common.config.v1.Config.Validate:input_type -> spire.service.common.config.v1.ValidateRequest
	1, // 4: spire.service.common.config.v1.Config.Configure:output_type -> spire.service.common.config.v1.ConfigureResponse
	3, // 5: spire.service.common.config.v1.Config.Validate:output_type -> spire.service.common.config.v1.ValidateResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_spire_service_common_config_v1_config_proto_init() }
func file_spire_service_common_config_v1_config_proto_init() {
	if File_spire_service_common_config_v1_config_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_spire_service_common_config_v1_config_proto_rawDesc), len(file_spire_service_common_config_v1_config_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_spire_service_common_config_v1_config_proto_goTypes,
		DependencyIndexes: file_spire_service_common_config_v1_config_proto_depIdxs,
		MessageInfos:      file_spire_service_common_config_v1_config_proto_msgTypes,
	}.Build()
	File_spire_service_common_config_v1_config_proto = out.File
	file_spire_service_common_config_v1_config_proto_goTypes = nil
	file_spire_service_common_config_v1_config_proto_depIdxs = nil
}
